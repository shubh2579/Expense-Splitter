// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String   @unique
  email     String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expensesPaid    Expense[]       @relation("PaidBy")
  expenseParticipants ExpenseParticipant[]
  
  @@map("users")
}

model Expense {
  id          String   @id @default(cuid())
  description String
  amount      Float
  paidById    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  paidBy             User               @relation("PaidBy", fields: [paidById], references: [id])
  participants       ExpenseParticipant[]
  
  @@map("expenses")
}

model ExpenseParticipant {
  id         String  @id @default(cuid())
  expenseId  String
  userId     String
  amount     Float
  shareType  String  @default("EQUAL") // EQUAL, CUSTOM, PERCENTAGE

  expense Expense @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([expenseId, userId])
  @@map("expense_participants")
}